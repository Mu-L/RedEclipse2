defvarp darkhud 0 2 2

defvarp showfps 0 0 4
defvarp showphys 0 0 1
defvarp showtime 0 1 1
defvarp showtimestyle 0 3 4
defvarp showrealtime 0 0 1
defvarp showevents 0 2 2
defvarp showdeaths 0 2 2

defvarp titleonstart 0 1 1
defvarp titlefadetime 0 3000 $varidxmax

deftvarp ui_hud_statetexs [playertex deadtex editingtex spectatortex waitingtex]
deftvarp ui_hud_statetex2 [playerbliptex deadtex playerbliptex spectatortex deadtex]
defsvarp ui_hud_timecols [red red red red red green yellow orange orange]

defvarp huddamage 0 2 2
deffvarp huddamagealpha 0 1 1
deffvarp huddamageblend 0 0.175 1
deffvarp huddamagezone 0 0.1 1.0
deffvarp huddamagearea 0 0.0625 1.0
deffvarp huddamageedge 0 0.1 0.5
deffvarp huddamagefade 0 0.175 1.0

exec "config/ui/hud/radar.cfg"

ui_hud_lastinit = 0

ui_hud_init = [
    uistyle clampxy
    if (!= $ui_hud_lastinit $totalmillis) [
        refreshenginestats
        ui_hud_segment = (minf (divf $uiaspect 3) 0.5)
        ui_hud_segrev = (divf 1.0 $ui_hud_segment)
        ui_hud_state = (getclientstate $focusedplayer)
        ui_hud_team = (getclientteam $focusedplayer)
        ui_hud_health = (getclienthealth $focusedplayer)
        ui_hud_spawnhealth = (getclientspawnhealth $focusedplayer)
        ui_hud_hasaffinity = (getclienthasaffinity $focusedplayer)
        ui_hud_colour = (? (|| $progresstype (= $ui_hud_state $CS_SPECTATOR)) 0x404040 (getclientcolour $focusedplayer $playerdisplaytone $playerdisplaytonelevel $playerdisplaytonemix))
        ui_hud_colour1 = (modcolour $ui_hud_colour 2.0)
        ui_hud_colour2 = (modcolour $ui_hud_colour 0.5)
        case $darkhud 0 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.75)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.75)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.75)
        ] 1 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.5)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.5)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.5)
        ] 2 [
            ui_hud_colour = (modcolour $ui_hud_colour 0.25)
            ui_hud_colour1 = (modcolour $ui_hud_colour1 0.25)
            ui_hud_colour2 = (modcolour $ui_hud_colour2 0.25)
        ]
        ui_hud_lastinit = $totalmillis
    ]

    uiclip 0 0 0 0 [
        uiclipforced 1
        uifont $textfontoutline [ uitext "Dummy" $ui_texttiny [ ui_hud_texttiny = $uilasth ] ]
    ]
]

timer_update_proc_enabled = 0

timer_update_proc = [
    ui_hud_timers_type = (updatetimers)

    if (&& $timer $ui_hud_timers_type) [
        timer_update_proc_enabled = 1
        sleep 100 [timer_update_proc]
    ] [
        timer_update_proc_enabled = 0
    ]
]

ui_hud_timers = [
    if $timer_update_proc_enabled [] [
        timer_update_proc
    ]

    if $ui_hud_timers_type [
        uicolour 0 0 0 [
            uistyle lefttop

            uispace $ui_padnormal $ui_padnormal [
                uivlist 0 [
                    if $frametimer [
                        uispace $ui_padtiny $ui_padtiny [
                            uivlist 0 [
                                uitext "Frame Time" $ui_texttiny [uicolourset $colouryellow]
                                uitext (concat (gettimer -1 1) "ms") $ui_texttiny [uitextlimit 1]
                            ]
                        ]
                    ]
                    if $timer [
                        local _timer_name
                        ui_hud_timers_count = (gettimer -1 -1)
                        uigrid 2 $ui_padnormal $ui_padtiny [
                            loop i $ui_hud_timers_count [
                                if (gettimer $i -2) [] [
                                    _timer_name = (concatword "^fa" (gettimer $i 0) (? (gettimer $i 1) " ^fG(gpu)" " ^fY(cpu)"))

                                    uitext $_timer_name $ui_textxtiny [uistyle rightmiddle]
                                    uitext (concat (precf (gettimer $i 6) 2) "ms") $ui_textxtiny
                                ]
                            ]
                        ]
                    ]
                ]
            ]
        ]
    ]
]

ui_hud_barcount = 0
ui_hud_barcolour = [ result (? (= (mod $ui_hud_barcount 2) (? $arg1 1 0)) $ui_hud_colour2 $ui_hud_colour) ]

ui_hud_leftbottom = [
    uivlist $ui_padtiny [
        uistyle leftbottom
        case $ui_hud_state $CS_ALIVE [
            ui_game_hud_player
        ]
    ]
]

ui_hud_centertop = [
    uivlist $ui_padtiny [
        uistyle centertop
        ui_game_hud_match
    ]
]

ui_hud_centerbottom = [
    uivlist $ui_padtiny [
        uistyle centerbottom
        if $showbearing [ ui_hud_bearing ]
    ]
]

ui_hud_centermiddle = [
    if (&& $showradar (= $ui_hud_state $CS_ALIVE)) [ ui_hud_midradar ]
]

ui_hud_gamestatus = [ ui_game_hud_status ]

ui_hud_showfps = [
    uiimage $glowtex 0x88000000 0 0 0 [
        uistyle $arg1

        uispace 0.02 0.01 [
            uihlist 0 [
                doif (>= $showfps 1) [
                    uivlist 0 [
                        uifill 0.035 0
                        uitext (getenginestat 11) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                        uitext "FPS" $ui_textsub [uitextlimit 1]
                    ]
                ] (= $showfps 2) [
                    uivlist 0 [
                        uifill 0.035 0
                        uitext (getenginestat 12) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                        uitext "SUB" $ui_textsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill 0.035 0
                        uitext (getenginestat 13) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                        uitext "ADD" $ui_textsub [uitextlimit 1]
                    ]
                ] (= $showfps 3) [
                    uivlist 0 [
                        uifill 0.035 0
                        uitext (- (getenginestat 11) (getenginestat 13)) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                        uitext "MIN" $ui_textsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill 0.035 0
                        uitext (+ (getenginestat 11) (getenginestat 12)) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                        uitext "MAX" $ui_textsub [uitextlimit 1]
                    ]
                ] (= $showfps 4) [
                    uivlist 0 [
                        uifill 0.035 0
                        uihlist 0 [
                            uitext (div 1000 (getenginestat 11)) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                            uitext "ms" $ui_textsub [uitextlimit 1]
                        ]
                        uitext "AVG" $ui_textsub [uitextlimit 1]
                    ]
                    uivlist 0 [
                        uifill 0.035 0
                        uihlist 0 [
                            uitext (div 1000 (- (getenginestat 11) (getenginestat 13))) $ui_texttiny [uitextlimit 1; uicolourset $colouryellow]
                            uitext "ms" $ui_textsub [uitextlimit 1]
                        ]
                        uitext "MAX" $ui_textsub [uitextlimit 1]
                    ]
                ]
            ]
        ]
    ]
]

defvarp showdamagelog 0 1 1
defvarp damageloghold 0 2000 $varidxmax
defvarp damageloglines 0 10 $varidxmax
deffvarp damagelogblend 0 1 1

defvarp damagelogskin 0 2 4
deffvarp damagelogskinblend 0.0 0.9 1.0
deffvarp damagelogskinspace 0 0.001 $fvaridxmax

ui_hud_damagelog = [
    if $showdamagelog [
        local _lines
        _lines = 0
        loopdamagerevif 0 0 _curdamage [&& (< $_lines $damageloglines) (= (getdamagefrom $_curdamage) $focusedplayer)] [
            local _from _spawnhealth _totaldamage _millis _damageready _growth _blend _text
            _from = (getdamageclient $_curdamage)
            _totaldamage = (getdamageamt $_curdamage)
            _millis = (getdamagemillis $_curdamage)
            _damageready = (getdamageready $_curdamage)
            _text = (concat (getclientname $_from) (concatword (? (> $_totaldamage 0) "-" "+") $_totaldamage))

            _growth = 1.0
            if $_damageready [
                local _damagetime _damagelength
                _damagetime = (- $totalmillis $_damageready)
                _damagelength = (getdamagelength $_curdamage)

                if (> $_damagelength $damageloghold) [
                    _damagelength = (- $_damagelength $damageloghold)
                    _damagetime = (- $_damagetime $damageloghold)
                ]

                if (> $_damagetime 0) [
                    if (< $_damagetime $_damagelength) [
                        _growth = (-f 1 (divf $_damagetime $_damagelength))
                        _blend = (clampf (*f $_growth $damagelogblend) 0 1)
                    ] [
                        _growth = 0.0
                        _blend = 0.0
                    ]
                ] [
                    _growth = 1.0
                    _blend = 1.0
                ]
            ] [
                _growth = (divf (- $totalmillis $_millis) $damagemergedelay)
                _blend = (clampf (*f $_growth $damagelogblend) 0 1)
            ]
            
            if (>f $_blend 0.0) [
                _lines = (+ $_lines 1)
                uitag (concatword "damagelog_" $_millis "_" (getdamageseqid $_curdamage)) [
                    uipad 0 0 0 (*f $ui_padsmaller $_growth) [
                        uistyle rightbottom
                        uiborderedimageclamped $skinalphatex 0x80000000 0 $ui_texborder $ui_screenborder 0 0 [
                            uistyle rightbottom
                            uiclip 0 0 0 0 [
                                uistyle rightbottom
                                uispace $ui_padsmall $ui_padsmaller [
                                    uistyle rightbottom
                                    uihlist $ui_padsmall [
                                        uistyle rightmiddle
                                        uitext $_text $ui_texttiny [
                                            uistyle rightbottom
                                            uitextalign -1
                                            uitextwrap (-f 0.475 $ui_hud_texttiny (*f $ui_padsmaller 2))
                                        ]
                                    ]
                                ]
                                uiclipoffsetx (*f $uilastwprev (-f 1.0 $_growth))
                                uiclipoffsety (*f $uilasthprev (-f 1.0 $_growth))
                                uiclipsizew (*f $uilastwprev $_growth)
                                uiclipsizeh (*f $uilasthprev $_growth)
                            ]
                        ] (*f 0.001 $_growth) $damagelogskin $damagelogskinblend
                        uipropagate [ uicolourblend $_blend ]
                    ]
                ]
            ]
        ]
    ]
]

ui_hud_rightbottom = [
    uivlist $ui_padtiny [
        uistyle rightbottom
         case $ui_hud_state $CS_ALIVE [
            ui_hud_damagelog
            ui_game_hud_weapon
        ]
   ]
]

ui_hud_lefttop = [
    uivlist $ui_padtiny [
        uistyle lefttop
        uistyle clampx
        if (>= $showconsole (? (isediting) 1 2)) [
            uifont $textfontoutline [
                uistyle lefttop
                uistyle clampx
                uivlist 0 [
                    uistyle lefttop
                    uistyle clampx
                    if $condebuglinesamt [
                        ui_console_draw $condebuglinesamt $condebugouttime $condebugfadetime $condebugintime $condebugblend $ui_hud_segment $ui_textsmaller
                    ]
                    if $coneventlinesamt [
                        ui_console_draw $coneventlinesamt $coneventouttime $coneventfadetime $coneventintime $coneventblend $ui_hud_segment $ui_textsmaller
                    ]
                ]
            ]
        ]
        if $showevents [ ui_hud_events ]
    ]
]

ui_hud_chathistory = [
    uivlist $ui_padtiny [
        uistyle lefttop
        ui_gameui_chat
    ]
]

ui_hud_showphys = [
    local _len _delay _timer _timer2 _amt1 _amt2 _name _value
    uiborderedimageclamped $skinalphatex $ui_hud_colour 0 $ui_texborder $ui_screenborder 0.035 0.035 [
        uitable 0.05 0 [
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (at $PHYS_NAMES (getclientphysstate $focusedplayer)) 0.8 ]
                uispace 0.0005 0.0005 [ uitext (at $IM_T_NAMES (getclientimpulsetype $focusedplayer)) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (? (getclientairtime $focusedplayer) "In Air" "On Floor") 0.8 ]
                uispace 0.0005 0.0005 [ uitext (? (getclientairtime $focusedplayer) (getclientairtime $focusedplayer) (getclientfloortime $focusedplayer)) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext (? (getclientslide $focusedplayer) "Sliding" "Normal") 0.8 ]
                uispace 0.0005 0.0005 [ uitext (? (getclientregenimpulse $focusedplayer) "Regen" "Wait") 0.8 ]
            ]
            uitablerow [] [ uispace 0.0005 0.0005 [ uistyle clampx; uiline 0x000000 0 0 [uistyle clampx] ] ]
            loop i $IM_MAX [
                _name = (at $IM_NAMES $i)
                _value = (getclientimpulse $focusedplayer $i)
                uitablerow [
                    uispace 0.0005 0.0005 [ uitext $_name 0.6 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uitext $_value 0.6 [uistyle leftmiddle] ]
                ]
            ]
            loop i $IM_T_MAX [
                _name = (at $IM_T_NAMES $i)
                _value = (getclientimpulsetime $focusedplayer $i)
                _len = (getclientimpulsetimer $focusedplayer $i 1 0 3)
                _delay = (getclientimpulsetimer $focusedplayer $i 1 1 3)
                _timer1 = (getclientimpulsetimer $focusedplayer $i 1 0 1)
                _timer2 = (getclientimpulsetimer $focusedplayer $i 1 1 1)
                _amt1 = (? [> $_len 0] (-f 1.0 (divf $_timer1 $_len)) 0.0)
                _amt2 = (? [> $_delay 0] (-f 1.0 (divf $_timer2 $_delay)) 0.0)
                uitablerow [] [ uispace 0.0005 0.0005 [ uistyle clampx; uiline 0x000000 0 0 [uistyle clampx] ] ]
                uitablerow [
                    uispace 0.0005 0.0005 [
                        uitext $_name 0.6 [
                            uistyle rightmiddle
                            uicolourset (? (getclientcanimpulse $focusedplayer $i) $colourgreen $colourorange)
                        ]
                    ]
                    uispace 0.0005 0.0005 [ uitext $_value 0.6 [uistyle leftmiddle] ]
                ]
                uitablerow [
                    uispace 0.0005 0.0005 [ uitext $_len 0.6 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uitext $_delay 0.6 [uistyle leftmiddle] ]
                ]
                uitablerow [
                    uispace 0.0005 0.0005 [ uicolour 0x40F040 (*f 0.075 $_amt1) 0.005 [uistyle rightmiddle] ]
                    uispace 0.0005 0.0005 [ uicolour 0xF04040 (*f 0.075 $_amt2) 0.005 [uistyle leftmiddle] ]
                ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext "Sprint" 0.8 ]
                uispace 0.0005 0.0005 [ uitext (getclientsprinttime $focusedplayer) 0.8 ]
            ]
            uitablerow [
                uispace 0.0005 0.0005 [ uitext  "RotVel" 0.8 ]
                uispace 0.0005 0.0005 [ uitext (substr (getclientrotvelx $focusedplayer) 0 5) 0.8 ]
            ]
        ]
    ]
]

ui_hud_righttop = [
    uivlist $ui_padtiny [
        uistyle righttop
        uistyle clampx
        if $showminimap [ ui_hud_minimap ]
        if (&& [! $visorhud] $showfps) [ ui_hud_showfps righttop ]
        if $showphys [ ui_hud_showphys ]
        if $showdeaths [ ui_hud_deaths ]
    ]
]

ui_hud_space = [
    uifill 0 (*f $arg3 0.1)
]

ui_hud_toolcheck = [
    if (isediting) [
        uifill 0 $ui_toolbar_height
    ]
]

ui_hud_pos = [
    if $arg1 [] [arg1 = "leftbottom"]
    if $arg2 [] [arg2 = $arg1]
    if $arg3 [] [arg3 = $ui_hud_segment]
    uifill $arg3 $arg3 [
        uistyle $arg1
        uispace $ui_padhud $ui_padhud [
            uistyle $arg1
            uivlist $ui_padsmall [
                uistyle $arg1
                if $arg4 [doargs $arg4]
                looplist target $arg2 [[ui_hud_@target] [@@@@arg1] [@@@@arg2] [@@@@arg3]]
            ]
        ]
    ]
]

ui_hud_headbody = [
    ui_hud_pos lefttop [toolcheck lefttop]
    ui_hud_pos leftbottom [chathistory leftbottom]
    ui_hud_pos centertop
    ui_hud_pos centerbottom
    ui_hud_pos righttop
    ui_hud_pos rightbottom
    ui_hud_pos centermiddle
    ui_hud_pos centermiddle [gamestatus]
    ui_game_hud_fullscreen
]

ui_hud_progress = [
    local hud_title
    hud_title = 0.0

    if (&& $titleonstart [! $uihasmenu] (= $progresstype $PROGRESS_GAMESTATE) (< $gamestate $G_S_PLAYING) (> $gametimewait 0) (> $titlefadetime 0) (<= $gamemapelapsed $titlefadetime)) [
        hud_title = (-f 1.0 (divf $gamemapelapsed $titlefadetime))
    ]

    local hud_desc hud_tipstr
    hud_desc = (at $G_S_NAMES $gamestate)
    hud_tipstr = "Press ^fs^fw^f{=1:spectate 0}^fS to join the match"

    caseif $gametimeremain [
        hud_desc = (concatword $hud_desc ": ^fg" (timestr $gametimeremain $showtimestyle))
    ] (>= $gamestate $G_S_INTERMISSION) [
        hud_tipstr = (tipshow)
    ]

    ui_progress $progresstype $hud_title $gametimeprogress $hud_desc $hud_tipstr [
        ui_hud_pos lefttop [lefttop]
    ] [
        ui_hud_pos leftbottom [chathistory]
    ] 0
]

ui_hud_allow = [ result (&& $isconnected $showhud [! $uihasmenu]) ]

newui "hud" $SURFACE_VISOR [
    ui_hud_init

    if (ui_hud_allow) [
        uiallowinput (? $gameui_chat_typing 1 0)
        uigroup [
            uistyle clampxy
            caseif (isediting) [
                ui_hud_pos lefttop [toolcheck lefttop]
            ] $progresstype [
                ui_hud_progress
            ] () [
                uifill (minf (get game_hud_maxaspect) $uiaspect) 0 [
                    uistyle clampy
                    ui_hud_headbody
                ]
            ]
        ]
    ]
]

newui "hud" $SURFACE_FOREGROUND [
    ui_hud_init

    if (ui_hud_allow) [
        if (isediting) [
            uiallowinput (? $ui_freecursor 2 0)
            uigroup [
                uistyle clampxy
                ui_hud_toolview
            ]
        ] [
            uigroup [
                uistyle clampxy
                if (&& $visorhud $showfps) [ ui_hud_showfps centerbottom ]
            ]
        ]
    ]

    ui_hud_timers
]

huddamageshader = [
    shader $SHADER_DEFAULT $arg1 [
        attribute vec4 vvertex, vcolor;
        attribute vec2 vtexcoord0;
        uniform mat4 hudmatrix;
        varying vec2 texcoord0;
        varying vec4 colorscale;

        void main(void)
        {
            gl_Position = hudmatrix * vvertex;
            texcoord0 = vtexcoord0;
            colorscale = vcolor;
        }
    ] [
        uniform sampler2D tex0;
        uniform vec2 player; // posx posy
        uniform vec4 params; // noise offx offy mul
        uniform vec2 texsize; // width height
        @(? (>= (strstr $arg1 "edge") 0) [
            uniform vec4 edgesize; // x y x2 y2
            uniform vec2 edgesizeinv; // x y
        ] [
            uniform vec4 renderaspect; // w h invw invh
            uniform vec4 renderarea; // x y
        ])
        uniform vec4 curmillis;
        varying vec2 texcoord0;
        varying vec4 colorscale;

        fragdata(0) vec4 fragcolor;

        float rand(vec2 co) { return fract(sin(dot(co.xy, vec2(12.9898, 78.233)))*43758.5453); }

        void main()
        {
            @(if (>= (strstr $arg1 "edge") 0) [result [
                vec2 curdist = vec2(0.0);

                if(texcoord0.x < edgesize.x) curdist.x = edgesize.x - texcoord0.x;
                else if(texcoord0.x > edgesize.z) curdist.x = texcoord0.x - edgesize.z;
                if(texcoord0.y < edgesize.y) curdist.y = edgesize.y - texcoord0.y;
                else if(texcoord0.y > edgesize.w) curdist.y = texcoord0.y - edgesize.w;

                if(curdist.x <= 0.0 && curdist.y <= 0.0) discard;
                curdist *= edgesizeinv;

                float dist = (1.0 - distance(texcoord0, player) * 0.5) * max(curdist.x, curdist.y);
            ]] [result [
                vec2 coord = texcoord0 * 2.0 - 1.0;
                
                float area = clamp(distance(vec2(0.0), coord), 0.0, 1.0);
                if(area <= renderarea.x) discard;
                area -= renderarea.x;
                area *= renderarea.z;

                float zone = clamp(dot(coord, player), -1.0, 1.0);
                if(zone <= renderarea.y) discard;
                zone -= renderarea.y;
                zone *= renderarea.w;
                
                float dist = clamp(area * area * zone, 0.0, 1.0);
            ]])
            if(dist <= 0.0) discard;

            vec2 noise = vec2(0.5 - rand(vec2(texcoord0 - curmillis.x)) * params.x, 0.5 - rand(vec2(texcoord0 + curmillis.x)) * params.x);
            vec4 diffuse = (texture2D(tex0, (texcoord0 - params.yz + noise) * texsize.xy) + texture2D(tex0, (texcoord0 - params.yz - noise) * texsize.xy)) * 0.5;

            diffuse.rgb *= diffuse.a * params.w;
            diffuse.a *= dist;
            if(diffuse.a <= 0.0) discard;

            fragcolor = diffuse * colorscale;
        }
    ] 1
]

huddamageshader "huddamage"
huddamageshader "huddamageedge"

ui_hud_damage = [
    local _invaspect _edgesize1 _edgesize2 _edgesize3 _edgesize4 _edgesizeinv1 _edgesizeinv2
    if (= $huddamage 1) [
        _invaspect = (divf 1.0 $uiaspect)
        _edgesize1 = (*f $_invaspect $huddamageedge)
        _edgesize2 = $huddamageedge
        _edgesize3 = (-f 1.0 (*f $_invaspect $huddamageedge))
        _edgesize4 = (-f 1.0 $huddamageedge)
        _edgesizeinv1 = (divf $huddamagefade (*f $_invaspect $huddamageedge))
        _edgesizeinv2 = (divf $huddamagefade $huddamageedge)
    ] [
        _edgesize1 = (-f 1.0 $huddamagearea)
        _edgesize2 = (-f 1.0 $huddamagezone)
        _edgesizeinv1 = (divf 1.0 $huddamagearea)
        _edgesizeinv2 = (divf 1.0 $huddamagezone)
    ]

    loopdamagerevif 0 0 player_curdamage [= (getdamageclient $player_curdamage) $focusedplayer] [
        local player_from player_spawnhealth player_totaldamage player_damagelevel player_damageblend player_damageready
        player_from = (getdamagefrom $player_curdamage)
        player_spawnhealth = (getclientspawnhealth $player_curdamage)
        player_totaldamage = (getdamageamt $player_curdamage)
        player_damagelevel = (clampf (divf $player_totaldamage $player_spawnhealth) 0.1 1.0)
        player_damagedirxy = (? (= $focusedplayer $player_from) "0 -1" (getclientradardirxy $player_from))
        player_damageready = (getdamageready $player_curdamage)
        player_damagetexsz = 1.0

        local player_damagemillis
        player_damagemillis = (getdamagemillis $player_curdamage)
        if $player_damageready [
            local player_damagetime player_damagelength
            player_damagetime = (- $totalmillis $player_damageready)
            player_damagelength = (getdamagelength $player_curdamage)
            player_damageblend = (clampf (-f 1.0 (divf $player_damagetime $player_damagelength)) 0.0 1.0)
        ] [
            player_damageblend = 1.0
        ]

        local player_damagecolour player_damagetex player_damagenoise player_damagemovex player_damagemovey player_damagemul
        case (getdamagetype $player_curdamage) 0 [
            player_damagecolour = (skewcolour $colourred (getclientpulsecolour $focusedplayer $PULSE_ALERT) (*f $player_damagelevel $player_damageblend 2.0))
            player_damagetex = "<grey>textures/damage/hurt"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 3000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend 0.1)
            player_damagemul = 2.5
        ] 1 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_BURN)
            player_damagetex = "<grey>textures/damage/burn"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 2000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend $player_damageblend)
            player_damagetexsz = 0.5
            player_damagemul = 1.5
        ] 2 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_BLEED)
            player_damagetex = "<grey>textures/damage/bleed"
            player_damagenoise = (*f $player_damagelevel 0.025)
            player_damagemovex = (divf $player_damagemillis 10000)
            player_damagemovey = (-f 0.0 (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend))
            player_damagetexsz = 0.5
            player_damagemul = 1.5
        ] 3 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_SHOCK)
            player_damagetex = "<grey>textures/damage/shock"
            player_damagenoise = (*f $player_damagelevel 0.05)
            player_damagemovex = (divf $player_damagemillis 2000)
            player_damagemovey = (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend $player_damageblend)
            player_damagetexsz = 2.0
            player_damagemul = 2.0
        ] 4 [
            player_damagecolour = (getclientpulsecolour $focusedplayer $PULSE_CORRODE)
            player_damagetex = "<grey>textures/damage/corrode"
            player_damagenoise = (*f $player_damagelevel 0.025)
            player_damagemovex = (divf $player_damagemillis 10000)
            player_damagemovey = (-f 0.0 (+f (divf (-f $totalmillis $player_damagemillis) 10000) $player_damageblend))
            player_damagetexsz = 2.0
            player_damagemul = 1.0
        ]

        if (mod $player_damagemillis 2) [
            player_damagemovex = (+f $player_damagemovex $player_damagelevel (*f $player_damageblend 0.5))
        ] [
            player_damagemovex = (-f $player_damagemovex $player_damagelevel (*f $player_damageblend 0.5))
        ]

        uirender (? (= $huddamage 1) "huddamageedge" "huddamage") 0 0 [
            uistyle clampxy
            uicolourset $player_damagecolour
            uicolourblend (*f $player_damageblend $huddamagealpha)
            uirenderparam player (-f 0.0 (at $player_damagedirxy 0)) (-f 0.0 (at $player_damagedirxy 1))
            uirenderparam params $player_damagenoise $player_damagemovex $player_damagemovey $player_damagemul
            uirenderparam texsize $player_damagetexsz $player_damagetexsz
            if (= $huddamageedge 1) [
                uirenderparam edgesize $_edgesize1 $_edgesize2 $_edgesize3 $_edgesize4
                uirenderparam edgesizeinv $_edgesizeinv1 $_edgesizeinv2
            ] [
                uirenderparam renderarea $_edgesize1 $_edgesize2 $_edgesizeinv1 $_edgesizeinv2
            ]
            uirendertex $player_damagetex 0x300
        ]
    ]
]

newui "hud" $SURFACE_BACKGROUND [
    ui_hud_init

    if (ui_hud_allow) [
        uigroup [
            uistyle clampxy
            if (&& $huddamage [! (isediting)]) [ ui_hud_damage ]
            uipropagate [ uicolourblend $huddamageblend ]
        ]
    ]
]
