shader $SHADER_DEFAULT "crosshair_plus" [
    attribute vec4 vvertex, vcolor;
    attribute vec2 vtexcoord0;
    uniform mat4 hudmatrix;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    void main(void)
    {
        gl_Position = hudmatrix * vvertex;
        texcoord0 = vtexcoord0;
        colorscale = vcolor;
    }
] [
    uniform vec2 smoothfactor;
    uniform vec3 dimensions;
    varying vec2 texcoord0;
    varying vec4 colorscale;

    fragdata(0) vec4 fragcolor;

    @(sdf_oriented_box)

    void main()
    {
        vec2 coord = texcoord0 * 2.0 - 1.0;
        float b1 = sdf_oriented_box(coord, vec2(0.0, dimensions.x), vec2(0.0, dimensions.y), dimensions.z);
        float b2 = sdf_oriented_box(coord, vec2(0.0, -dimensions.x), vec2(0.0, -dimensions.y), dimensions.z);
        float b3 = sdf_oriented_box(coord, vec2(dimensions.x, 0.0), vec2(dimensions.y, 0.0), dimensions.z);
        float b4 = sdf_oriented_box(coord, vec2(-dimensions.x, 0.0), vec2(-dimensions.y, 0.0), dimensions.z);
        float b = min(min(b1, b2), min(b3, b4));
        if(b > 0.0) discard;
        vec4 outcolor = vec4(vec3(smoothstep(0.0, smoothfactor.x, abs(b))), smoothstep(0.0, smoothfactor.y, abs(b)));
        fragcolor = outcolor * colorscale;
    }
]

newui "pointer" $SURFACE_FOREGROUND [
    uiwinstyle (? (getinput 1 1) $WINSTYLE_CURSOR $WINSTYLE_CROSSHAIR)

    case $uiwinstyle $WINSTYLE_CURSOR [
        uiimage $cursortex 0xFFFFFF 0 $cursorsize $cursorsize [
            uicolourblend $cursorblend
        ]
    ] $WINSTYLE_CROSSHAIR [
        uirender "crosshair_plus" $crosshairsize $crosshairsize [
            uirenderparam smoothfactor 0.05 0.01
            uirenderparam dimensions 0.25 0.95 0.15
            uicolourblend $crosshairblend
        ]
    ]
]
